{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Dromedary demo - application instance",

    "Parameters" : {
        "Ec2Key": {
            "Type": "String",
            "Description": "Ec2 key for ssh access",
            "Default": ""
        },
        "SubnetId": {
            "Type": "String",
            "Description": "VPC subnet id in which to place instance"
        },
        "VPC": {
            "Type": "String",
            "Description": "VPC id in which to place instance"
        },
        "CfnInitRole": {
            "Type": "String",
            "Description": "IAM Role for cfn-init"
        },
        "InstanceProfile": {
            "Type": "String",
            "Description": "Instance profile for app instance"
        },
        "S3Bucket": {
            "Type": "String",
            "Description": "Artifact Bucket"
        },
        "ArtifactPath": {
            "Type": "String",
            "Description": "Path to tarball in Artifact Bucket",
            "Default": ""
        },
        "CodeDeployTag": {
            "Type": "String",
            "Description": "Resource Tags for Deployment Group (non-zero enables CodeDeploy agent)",
            "Default": "1"
        },
        "DynamoDbTable": {
            "Type": "String",
            "Description": "DynamoDb table name for persistent storage",
            "MinLength": "1",
            "MaxLength": "32"
        }
    },

    "Conditions": {
        "NoEc2Key": { "Fn::Equals" : [ { "Ref" : "Ec2Key" }, "" ]},
        "InstallCodeDeploy": { "Fn::Not" : [{ "Fn::Equals" : [ { "Ref" : "CodeDeployTag" }, "" ]} ]}
    },

    "Mappings": {
        "RegionConfig": {
            "us-east-1": {
                "ami": "ami-2d652448"
            }
        }
    },

    "Resources": {
        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "152.3.4.5/32" },
                    { "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "153.0.0.0/8" },
                    { "IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": "153.0.0.0/8" },
                    { "IpProtocol": "tcp", "FromPort": "8080", "ToPort": "8080", "CidrIp": "153.0.0.0/8" }
                ]
            }
        },

        "WebServerInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Authentication" : {
                    "S3AccessCreds" : {
                        "type" : "S3",
                        "roleName" : { "Ref" : "CfnInitRole" },
                        "buckets" : [{ "Ref" : "S3Bucket" }]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "configSets" : {
                        "chef" : [ "chef" ],
                        "base" : [ "base" ],
                        "noprereqs" : [ "noprereqs" ],
                        "default" : [ { "ConfigSet" : "base" }]
                    },
                    "chef": {
                        "files": {
                            "/tmp/chefdk.rpm": {
                                "source": "https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chefdk-0.7.0-1.el6.x86_64.rpm",
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "10-install-chef": {
                                "command": "rpm -ivh /tmp/chefdk.rpm"
                            }
                         }
                    },
                    "base": {
                        "files": {
                            "/tmp/dromedary.tgz": {
                                "source": { "Fn::Join": [ "", [ "https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/", { "Ref": "ArtifactPath" } ]]},
                                "authentication": "S3AccessCreds",
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "10-extract-dromedary": {
                                "command": { "Fn::Join" : [ "", [
                                    "mkdir -p -m755 /userdata\n",
                                    "cd /userdata\n",
                                    "tar xzf /tmp/dromedary.tgz\n"
                                ]]}
                            },
                            "20-run-chef": {
                                "cwd": "/userdata",
                                "env": {
                                    "HOME": "/root",
                                    "DROMEDARY_DDB_TABLE_NAME": { "Ref": "DynamoDbTable" }
                                },
                                "command": { "Fn::Join" : [ "", [
                                    "cat > /userdata/solo.rb <<SOLORB\n",
                                    "cookbook_path ['/userdata']\n",
                                    "SOLORB\n", "\n",
                                    "chef-solo --config /userdata/solo.rb --log_level auto --force-formatter --json-attributes /userdata/dromedary/attributes.json\n",
                                    "node -v \n",
                                    "npm -v\n"
                                ]]}
                            }
                        }
                    },
                    "noprereqs": {
                        "files": {
                            "/tmp/dromedary.tgz": {
                                "source": { "Fn::Join": [ "", [ "https://s3.amazonaws.com/", { "Ref" : "S3Bucket" }, "/", { "Ref": "ArtifactPath" } ]]},
                                "authentication": "S3AccessCreds",
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "10-extract-dromedary": {
                                "command": { "Fn::Join" : [ "", [
                                    "mkdir -p -m755 /userdata\n",
                                    "cd /userdata\n",
                                    "tar xzf /tmp/dromedary.tgz\n"
                                ]]}
                            },
                            "20-run-chef": {
                                "cwd": "/userdata",
                                "env": {
                                    "HOME": "/root",
                                    "DROMEDARY_DDB_TABLE_NAME": { "Ref": "DynamoDbTable" }
                                },
                                "command": { "Fn::Join" : [ "", [
                                    "cat > /userdata/solo.rb <<SOLORB\n",
                                    "cookbook_path ['/userdata']\n",
                                    "SOLORB\n", "\n",
                                    "chef-solo --config /userdata/solo.rb --log_level auto --force-formatter --json-attributes /userdata/dromedary/attributes-noprereqs.json\n",
                                    "node -v \n",
                                    "npm -v\n"
                                ]]}
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": { "Fn::FindInMap": [ "RegionConfig", { "Ref": "AWS::Region" }, "ami" ]},
                "InstanceType": "m4.large",
                "IamInstanceProfile": { "Ref": "InstanceProfile" },
                "KeyName": { "Fn::If": [ "NoEc2Key", { "Ref": "AWS::NoValue" }, { "Ref": "Ec2Key" } ]},
                "Tags": { "Fn::If": [ "InstallCodeDeploy",
                    [{ "Key": "Application", "Value": { "Ref": "AWS::StackId" }},
                     { "Key": "Name", "Value": { "Ref": "AWS::StackName" } },
                     { "Key": "environment", "Value": { "Ref" : "CodeDeployTag" } }],
                    [{ "Key": "Application", "Value": { "Ref": "AWS::StackId" }},
                     { "Key": "Name", "Value": { "Ref": "AWS::StackName" } }]
                ]},
                "NetworkInterfaces": [{
                    "GroupSet": [{ "Ref": "InstanceSecurityGroup" }],
                    "AssociatePublicIpAddress": "true",
                    "DeviceIndex": "0",
                    "DeleteOnTermination": "true",
                    "SubnetId": { "Ref": "SubnetId" }
                }],
                "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
                    "#!/bin/bash -xe\n",
                    "yum update -y aws-cfn-bootstrap\n",
                    "\n",
                    "# Helper functions\n",
                    "function error_exit\n",
                    "{\n",
                    "  /opt/aws/bin/cfn-signal -e 1 -r \"$1\"",
                      " --stack ", { "Ref" : "AWS::StackName" },
                      " --resource WebServerInstance ",
                      " --region ", { "Ref" : "AWS::Region" }, "\n",
                    "  exit 1\n",
                    "}\n",
                    "function cfn_init\n",
                    "{\n",
                    "  /opt/aws/bin/cfn-init -v -s ", { "Ref": "AWS::StackId" },
                      " -r WebServerInstance --region ", { "Ref": "AWS::Region" },
                      " --role ", {"Ref": "CfnInitRole"},
                      " \"$@\"\n",
                    "}\n",
                    "function cfn_signal_ok\n",
                    "{\n",
                    "  /opt/aws/bin/cfn-signal -e 0 ",
                      " --stack ", { "Ref" : "AWS::StackName" },
                      " --resource WebServerInstance ",
                      " --region ", { "Ref" : "AWS::Region" }, " || true\n",
                    "}\n",
                    "\n",
                    "if ! which chef-solo > /dev/null 2>&2; then\n",
                    "  cfn_init -c chef || error_exit 'Failed to run cfn-init chef'\n",
                    "fi\n",
                    "\n",
                    "if [ -e /.dromedary-prereqs-installed ]; then\n",
                    "  cfn_init -c noprereqs || error_exit 'Failed to run cfn-init noprereqs'\n",
                    "else\n",
                    "  yum -y upgrade\n",
                    "  cfn_init || error_exit 'Failed to run cfn-init'\n",
                    "fi\n",
                    "cfn_signal_ok\n",
                    "\n"
                ]]}}
            },
            "CreationPolicy": {
                "ResourceSignal": { "Timeout": "PT15M" }
            }
        }
    },

    "Outputs": {
        "PublicDns": {
            "Description": "Public DNS of Dromedary App instance",
            "Value": { "Fn::GetAtt": [ "WebServerInstance", "PublicIp" ]}
        },
        "InstanceId": {
            "Description": "Dromedary App instance id",
            "Value": { "Ref": "WebServerInstance" }
        },
        "InstanceSecurityGroup": {
            "Description": "Security group id of app instance",
            "Value": { "Ref": "InstanceSecurityGroup" }
        }
    }
}
